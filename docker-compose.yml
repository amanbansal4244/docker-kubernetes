version: '3.8' # Specifies which format version should be used. This is a mandatory field. Here we use the newer version, whereas the legacy format is ‘1’.

services: # Each object in this key defines a service, a.k.a container. This section is mandatory.
    message-server:
        container_name: message-server
        build: # If given, docker-compose is able to build an image from a Dockerfile
            context: docker-message-server # If given, it specifies the build-directory, where the Dockerfile is looked-up.
            dockerfile: Dockerfile # If given, it sets an alternate name for a Dockerfile. This is optional.
        # docker-message-server -> this image name should be same as your jar name
        image: docker-message-server:latest # Tells Docker which name it should give to the image when build-features are used. Otherwise, it’s searching for this image in the library or remote-registry.
        ports:
            - 7777:7777 #- "$LOCAL_PORT:$DOCKER_PORT"
        networks: # This is the identifier of the named networks to use. A given name-value must be listed in the networks section.
            - custom-spring-cloud-network
        restart: always
        #restart: unless-stopped
    product-server:
        container_name: product-server
        build:
            context: docker-product-server
            dockerfile: Dockerfile
        image: docker-product-server:latest
        ports:
            - 9999:9999
        networks:
            - custom-spring-cloud-network
        restart: on-failure #unless-stopped
        
networks: #In this section, we’re specifying the networks available to our services. In this example, we let docker-compose create a named network of type ‘bridge’ for us. If the option external is set to true, it will use an existing one with the given name.
    custom-spring-cloud-network:
        driver: bridge